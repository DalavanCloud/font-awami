/*
 	File: nastaliq_classes.gdh
 	
 	Graphite classes for Awami beyond the basic stuff
*/


table(glyph) {MUnits = 2048};

/* Treated as European numbers by default, which is probably okay.
cEasternDigits = (gEasternZero, gEasternOne, gEasternTwo, gEasternThree, gEasternFour,
	gEasternFive, gEasternSix, gEasternSeven, gEasternEight, gEasternNine)
		{ dir = DIR_ARABICNUMBER };
*/

g_lrm = pseudo(postscript("space"), 0x200E);	// some data uses LRM incorrectly instead of ZWNJ to break context

g__noDot1u = pseudo(postscript("_dot1u"));  // no longer used
g__noDot2l = pseudo(postscript("_dot2l"));
g__dot2l_tail = pseudo(postscript("_dot2l")) { mLowerS = point(0m,0m) }; // avoid spurious warning


// The version of the madda that is placed below the vowel - not currently used.
//gMaddaAbove_low = pseudo(postscript("absMaddaAbove"))
//	{ mUpperM = gMaddaAbove.mUpperM; mUpperS = gMaddaAbove.mUpperS; zeroM = point(0m, 0m) };


cNuqtaUpper = (g__dot1u, g__dot2u, g__dot2vu, g__dot3u, g__dot3uD, g__dot4u) ;
cNuqtaLower = (g__dot1l, g__dot2l, g__dot2vl, g__dot3l, g__dot4l) ;
cNuqta = (cNuqtaUpper, cNuqtaLower) ;

cNuqtaLikeUpper = (cNuqtaUpper, g__smallTah, g__hamza, gHamzaAbove, g__hamzaArabic, gHighHamza, gHighHamzaArabic,
	g__smallV, g__dot1u_smallTah, g__dot1u_smallV, g__dot1u_ngMark, g__smallTah2dots, g__kafSquiggle, g__peshWaw,
	g__wavyHamza,
	g__kafTop_null,
	// g__kafTop, gMaddaAbove_low,
	g__gafStroke, g__gafStroke_short);
cNuqtaLikeLower = (cNuqtaLower, g__hehHook_small, g__attachedRing, g__ring,
	gHamzaBelow, g__smallTahBelow, gWavyHamzaBelow,
	g__smallTah2dotsBelow, g__dot2l_tail);
cNuqtaLikeMiddle = (g__bar, g__barNarrow, g__barWaw, g__barRaised, g__barRaised_gaf, g__attachedRingMid);
cNuqtaLikeUpMid = (cNuqtaLikeUpper, cNuqtaLikeMiddle);
cNuqtaLike = (cNuqtaLikeUpper, cNuqtaLikeLower, cNuqtaLikeMiddle, g__noDot1u, g__noDot2l);

// Diacritics
// Note: hamzas are nuqta-like, not diacritics

// Diacritic combinations

cPostShadda = (gZabar, gPesh, gDozabar, gDopesh, gKharizabar);
cShaddaPlus = (g__shadda_zabar, g__shadda_pesh, g__shadda_dozabar, g__shadda_dopesh, g__shadda_kharizabar);

cPostKharizabar = (gZabar, gPesh, gDozabar, gDopesh);
cKharizabarPlus = (g__kharizabar_zabar, g__kharizabar_pesh, g__kharizabar_dozabar, g__kharizabar_dopesh);


cDiacriticUpper = ( gZabar, gPesh, gShadda, gJazm, gJazm_openleft, gKharizabar, gDozabar, 
    gDopesh, gUltaPesh, gNoonGhunnaMark, gMaddaAbove,
	gVowelSmallV, gVowelInvSmallV, gZabarTwoDots, gShortVowelMark,
	gSmallHighSadMark, gSmallHighAinMark, gSmallHighRehDadMark, 
    gSmallHighRehHahMark, gSmallHighSeen, gSmallHighTah, gNameMarker,
	cShaddaPlus, cKharizabarPlus);
cDiacriticLower = ( gZair, gKharizair, gDozair ) ;

cDiacritic = (cDiacriticUpper cDiacriticLower);


/*
Classes for diacritic ordering:
	cMark1 class contains shadda, hamza, mark noon ghunna
	cMark2 class contains the vowels
	cMark3 class contains maddah
	cMark4 class contains quranic marks and Rohingya tones
*/

cMark1 = (gShadda, gNoonGhunnaMark, g__hamza, gHamzaAbove, gHamzaBelow, g__wavyHamza, gWavyHamzaBelow
	// , gMaddaAbove_low
	);
cMark2 = (gZabar, gPesh, gZair, gDozabar, gDopesh, gDozair, gKharizabar, gKharizair,
	gJazm, gVowelInvSmallV, gVowelSmallV);
cMark3 = (gMaddaAbove);
cMark4 = (gSmallHighRehDadMark, gSmallHighAinMark, gSmallHighSeen);

cMark234 = (cMark2 cMark3 cMark4);
cMark34 = (cMark3 cMark4);


// The "raw" forms indicate that initial/medial processing has not been done yet.

gBehIni_raw = pseudo(postscript("absBehIni"));
gJeemIni_raw = pseudo(postscript("absJeemIni"));
gSeenIni_raw = pseudo(postscript("absSeenIni"));
gSadIni_raw = pseudo(postscript("absSadIni"));
gTahIni_raw = pseudo(postscript("absTahIni"));
gAinIni_raw = pseudo(postscript("absAinIni"));
gFehIni_raw = pseudo(postscript("absFehIni"));
gQafIni_raw = pseudo(postscript("absFehIni"));
gKafIni_raw = pseudo(postscript("absKehehIni"));
gGafIni_raw = pseudo(postscript("absGafIni"));
gLamIni_raw = pseudo(postscript("absLamIni"));
gMeemIni_raw = pseudo(postscript("absMeemIni"));
gNoonIni_raw = pseudo(postscript("absBehIni"));
gHehGoalIni_raw = pseudo(postscript("absHehGoalIni"));
gHehDoIni_raw = pseudo(postscript("absHehDoachashmeeIni"));
gChotiyehIni_raw = pseudo(postscript("absBehIni"));

gBehMed_raw = pseudo(postscript("absBehMed"));
gJeemMed_raw = pseudo(postscript("absJeemMed"));
gSeenMed_raw = pseudo(postscript("absSeenMed"));
gSadMed_raw = pseudo(postscript("absSadMed"));
gTahMed_raw = pseudo(postscript("absTahMed"));
gAinMed_raw = pseudo(postscript("absAinMed"));
gFehMed_raw = pseudo(postscript("absFehMed"));
gQafMed_raw = pseudo(postscript("absFehMed"));
gKafMed_raw = pseudo(postscript("absKehehMed"));
gGafMed_raw = pseudo(postscript("absGafMed"));
gLamMed_raw = pseudo(postscript("absLamMed"));
gMeemMed_raw = pseudo(postscript("absMeemMed"));
gNoonMed_raw = pseudo(postscript("absBehMed"));
gHehGoalMed_raw = pseudo(postscript("absHehGoalMed"));
gTehMarbutaGoal_raw = pseudo(postscript("absHehGoalIni"));
gHehGoalHamza_raw = pseudo(postscript("absHehGoalIni"));	// heh-hamza
gHehDoMed_raw = pseudo(postscript("absHehDoachashmeeMed"));
gChotiyehMed_raw = pseudo(postscript("absBehMed"));

gMeemMed_alt_raw = pseudo(postscript("absMeemMed._alt"));
gBehMed_SS_raw = pseudo(postscript("absBehMed.beF_ss"));  // absBehMed.beF_ss / absBehMed._ss


// Right-link

// Special cases

///gBariyehHamzaFin0 = pseudo(postscript("nlqBariyehFin")) {nuqtaG = w_hamza};
///gBariyeh0 = pseudo(postscript("absBehIni")) {nuqtaG = n2L};
//gBariyehFin0 = pseudo(postscript("nlqBariyehFin"))		{nuqtaG = nNone};  -- defined above with dual-connectors


cBehFin = (gBehFin, gBehFin_bfkl) ;
cJeemFin = (gJeemFin) ;
cSeenFin = (gSeenFin);
cSadFin = (gSadFin);
cTahFin = (gTahFin);
cAinFin = (gAinFin);
cFehFin = (gFehFin);
cQafFin = (gQafFin, gQafFin_stfhM);
cLamFin = (gLamFin);
cMeemFin = (gMeemFin);
cKafFin = (gKafFin, gGafFin);
cNoonFin = (gNoonFin, gNoonGhunnaFin); // gNoonRetroFin - not defined
cHehGoalFin = (gHehGoalFin);   // gHehGoalFin_stfh - no longer used
cHehDoFin = (gHehDoFin);
cChotiyehFin = (gChotiyehFin, gChotiyehFin_bfkl);
cYehTailFin = (gYehTailFin, gYehTailFin_bfkl);
cKashmiriYehFin = (gKashmiriYehFin, gKashmiriYehFin_bfkl);
cTehMarbutaFin = (gTehMarbutaFin);

// Right-link

cAlefIso = (gAlef, gAlefHamzaAbove, gAlefHamzaBelow, gAlefWavyHamzaAbove, gAlefWavyHamzaBelow,
				gAlefMaddaAbove);
cAlefFin = (gAlefFin, gAlefFin_lm);

cDalIso = (gDal, gThal, gDdal, gDalDotBelowSmallTah, gDalTwoVertBelowSmallTah, gThalDotBelow, 
	gDalRing, gDalFourDotsAbove);
cDalFin = (gDalFin);

cRehIso = (gReh, gZain, gRreh, gJeh, gRehDotBelow, gRehDotBelowDotAbove,
	gRehTwoDotsAbove, gRehRing, gRehFourDotsAbove, gRehTwoVertAbove, gRehHamzaAbove, gRehSmallTahTwoDots);
cRehFin = (gRehFin, gRehFin_jkl, gRehFin_sshg, gRehFin_hgM) ;

cWawIso = (gWaw, gWawHamzaAbove, gWawRing);
cWawFin = (gWawFin);

cBariyehIso = (gBariyeh, gBariyehHamza);		// bariyeh -> behIni + 2Nlower
cBariyehFin = (gBariyehFin);


// These classes must match each other.

// This class should only include forms generated by the separate-nuqta rules above:
cDualLinkIso = (g_zerojoin,	gBeh,		gJeem,		gSeen,		gSad,		gTah,
	gAin,		gFeh,		gQaf,		gKaf,		gGaf,		gLam,		gMeem,
	gNoon,		gHehGoal,	gHehDo,		gChotiyeh,	gBariyeh);
	
cDualLinkIni_raw = (g_zerojoin,		gBehIni_raw,	gJeemIni_raw,	gSeenIni_raw,	gSadIni_raw,	gTahIni_raw,
	gAinIni_raw,	gFehIni_raw,	gFehIni_raw,	gKafIni_raw,	gGafIni_raw,	gLamIni_raw,	gMeemIni_raw,
	gBehIni_raw,	gHehGoalIni_raw,gHehDoIni_raw,	gBehIni_raw,	gBehIni_raw);
		
cDualLinkMed_raw = (g_zerojoin,		gBehMed_raw,	gJeemMed_raw,	gSeenMed_raw,	gSadMed_raw,	gTahMed_raw,
	gAinMed_raw,	gFehMed_raw,	gFehMed_raw,	gKafMed_raw,	gGafMed_raw,	gLamMed_raw,	gMeemMed_raw,	
	gBehMed_raw,	gHehGoalMed_raw,gHehDoMed_raw,	gBehMed_raw,	gBehMed_raw);

cDualLinkFin = (	g_zerojoin,		gBehFin,		gJeemFin,		gSeenFin,		gSadFin,		gTahFin,
	gAinFin,		gFehFin,		gQafFin,		gKafFin,		gGafFin,		gLamFin,		gMeemFin,
	gNoonFin,		gHehGoalFin,	gHehDoFin,		gChotiyehFin	gBariyehFin);
	
	
// This class should only include forms generated by the separate-nuqta rules above:
cRightLinkIso = (	g_zerojoin,	gAlef,		gDal,		gReh,		gWaw		gTehMarbuta		gTehMarbutaGoal	);

cRightLinkFin = (	g_zerojoin,	gAlefFin,	gDalFin,	gRehFin,	gWawFin		gTehMarbutaFin	gHehGoalFin);


// NFD > NFC

// TODO: add more characters here: waw, alef...
c_nfd_noHamza = (gChotiyeh, gHehGoal);		// chotiyah, goal-hay
c_nfc_hamza   = (gYehHamzaAbove, gHehGoalHamza);		// hamza-yay, hay-hamza


// Basic classes for contextual shaping:
#include "nastaliq_cntxlClasses.gdh"

// Classes of initials and medials

cBehIni = ( gBehIni gBehIniBeM1 gBehIniBeM2 gBehIniJm gBehIniRe gBehIniSn gBehIniSd 
    gBehIniTaF gBehIniTaM gBehIniAi gBehIniFe gBehIniQf gBehIniMm gBehIniNn 
    gBehIniHgF gBehIniHgM gBehIniHd gBehIniCh gBehIniBy gBehIniBe gBehIniBeRe 
    gBehIniBeNn gBehIniMmX gBehIniMmM gBehIniKfX ) ;
cJeemIni = ( gJeemIni gJeemIniBeM1 gJeemIniBeF gJeemIniBeM2 gJeemIniJm gJeemIniRe 
    gJeemIniSn gJeemIniSd gJeemIniTaF gJeemIniTaM gJeemIniAi gJeemIniFe gJeemIniQf 
    gJeemIniMm gJeemIniNn gJeemIniHgF gJeemIniHgM gJeemIniHd gJeemIniCh gJeemIniBy 
    gJeemIniBe gJeemIniBeRe gJeemIniBeNn gJeemIniBeHg gJeemIniMmX gJeemIniKfX ) ;
cSeenIni = ( gSeenIni gSeenIniBeM1 gSeenIniBeF gSeenIniBeM2 gSeenIniJm gSeenIniRe 
    gSeenIniSn gSeenIniSd gSeenIniTaF gSeenIniTaM gSeenIniAi gSeenIniFe gSeenIniQf 
    gSeenIniMm gSeenIniNn gSeenIniHgF gSeenIniHgM gSeenIniHd gSeenIniCh gSeenIniBy 
    gSeenIniBe gSeenIniBeRe gSeenIniBeNn gSeenIniBeHg gSeenIniMmX gSeenIniKfX ) ;
cSadIni = ( gSadIni gSadIniBeM1 gSadIniBeF gSadIniBeM2 gSadIniJm gSadIniRe 
    gSadIniSn gSadIniSd gSadIniTaF gSadIniTaM gSadIniAi gSadIniFe gSadIniQf 
    gSadIniMm gSadIniNn gSadIniHgF gSadIniHgM gSadIniHd gSadIniCh gSadIniBy 
    gSadIniBe gSadIniBeRe gSadIniBeNn gSadIniBeHg gSadIniMmX gSadIniKfX ) ;
cTahIni = ( gTahIni gTahIniBeM1 gTahIniBeF gTahIniBeM2 gTahIniJm gTahIniRe 
    gTahIniSn gTahIniSd gTahIniTaF gTahIniTaM gTahIniAi gTahIniFe gTahIniQf 
    gTahIniMm gTahIniNn gTahIniHgF gTahIniHgM gTahIniHd gTahIniCh gTahIniBy 
    gTahIniBe gTahIniBeRe gTahIniBeNn gTahIniBeHg gTahIniMmX gTahIniKfX ) ;
cAinIni = ( gAinIni gAinIniBeM1 gAinIniBeF gAinIniBeM2 gAinIniJm gAinIniRe 
    gAinIniSn gAinIniSd gAinIniTaF gAinIniTaM gAinIniAi gAinIniFe gAinIniQf 
    gAinIniMm gAinIniNn gAinIniHgF gAinIniHgM gAinIniHd gAinIniCh gAinIniBy 
    gAinIniBe gAinIniBeRe gAinIniBeNn gAinIniBeHg gAinIniMmX gAinIniKfX ) ;
cFehIni = ( gFehIni gFehIniBeM1 gFehIniBeF gFehIniBeM2 gFehIniJm gFehIniRe 
    gFehIniSn gFehIniSd gFehIniTaF gFehIniTaM gFehIniAi gFehIniFe gFehIniQf 
    gFehIniMm gFehIniNn gFehIniHgF gFehIniHgM gFehIniHd gFehIniCh gFehIniBy 
    gFehIniBe gFehIniBeRe gFehIniBeNn gFehIniBeHg gFehIniMmX gFehIniKfX ) ;
cLamIni = ( gLamIni gLamIniBeM1 gLamIniBeM2 gLamIniJm gLamIniRe 
    gLamIniSn gLamIniSd gLamIniTaF gLamIniTaM gLamIniAi gLamIniFe gLamIniQf 
    gLamIniMm gLamIniNn gLamIniHgF gLamIniHgM gLamIniHd gLamIniCh gLamIniBy 
    gLamIniBe gLamIniBeRe gLamIniBeNn gLamIniBeHg gLamIniKfX
	gLamIniAl ) ;
cHehDoIni = ( gHehDoIni gHehDoIniBeM1 gHehDoIniBeF gHehDoIniBeM2 gHehDoIniJm 
    gHehDoIniRe gHehDoIniSn gHehDoIniSd gHehDoIniTaF gHehDoIniTaM gHehDoIniAi 
    gHehDoIniFe gHehDoIniQf gHehDoIniMm gHehDoIniNn gHehDoIniHgF gHehDoIniHgM 
    gHehDoIniHd gHehDoIniCh gHehDoIniBy gHehDoIniBe gHehDoIniBeRe gHehDoIniBeNn 
    gHehDoIniBeHg gHehDoIniMmX gHehDoIniKfX ) ;
cHehGoalIni = ( gHehGoalIni gHehGoalIniBeM1 gHehGoalIniBeF gHehGoalIniBeM2 gHehGoalIniJm 
    gHehGoalIniRe gHehGoalIniSn gHehGoalIniSd gHehGoalIniTaF gHehGoalIniTaM gHehGoalIniAi 
    gHehGoalIniFe gHehGoalIniQf gHehGoalIniMm gHehGoalIniNn gHehGoalIniHgF gHehGoalIniHgM 
    gHehGoalIniHd gHehGoalIniCh gHehGoalIniBy gHehGoalIniBe gHehGoalIniBeRe gHehGoalIniBeNn 
    gHehGoalIniBeHg gHehGoalIniMmX gHehGoalIniKfX ) ;
cKafIni_gaf = (gGafIni gGafIniBe /*gGafIniBeF*/ gGafIniBeM1 gGafIniBeM2 gGafIniJm gGafIniRe gGafIniSn 
	gGafIniSd gGafIniTaF gGafIniAi gGafIniFe gGafIniQf gGafIniMm gGafIniNn 
	gGafIniHgM gGafIniHgF gGafIniHd gGafIniCh gGafIniBy gGafIniDk gGafIniBeRe gKafIniBeNn gKafIniBeHg gGafIniKf
	gGafIniBeRe gGafIniBeHg gGafIniBeNn gGafIniLm);
cKafIni = ( gKafIni gKafIniBe /*gKafIniBeF*/ gKafIniBeM1 gKafIniBeM2 gKafIniJm gKafIniRe gKafIniSn 
    gKafIniSd gKafIniTaF gKafIniAi gKafIniFe gKafIniQf gKafIniMm gKafIniNn 
    gKafIniHgM gKafIniHgF gKafIniHd gKafIniCh gKafIniBy gKafIniDk gKafIniBeRe gKafIniBeNn gKafIniBeHg gKafIniKf
	gKafIniBeRe gKafIniBeHg gKafIniBeNn gKafIniLm
	cKafIni_gaf) ;
cKafIni_alt = ( gKafIniBeM1_alt gKafIniBeM2_alt gKafIniJm_alt gKafIniSn_alt gKafIniSd_alt gKafIniTaF_alt 
	gKafIniTaM_alt gKafIniAi_alt gKafIniFe_alt gKafIniMm_alt gKafIniHgM_alt gKafIniHd_alt
	gKafIniBe_alt gKafIniBeRe_alt gKafIniBeNn_alt gKafIniBeHg_alt gKafIniMmX_alt gKafIniKfX_alt
    gGafIniBeM1_alt gGafIniBeM2_alt gGafIniJm_alt gGafIniSn_alt gGafIniSd_alt gGafIniTaF_alt 
	gGafIniTaM_alt gGafIniAi_alt gGafIniFe_alt gGafIniMm_alt gGafIniHgM_alt gGafIniHd_alt
	gGafIniBe_alt gGafIniBeRe_alt gGafIniBeNn_alt gGafIniBeHg_alt gGafIniMmX_alt gGafIniKfX_alt ) ;


cBehMed = ( gBehMed gBehMedBeM1 gBehMedBeF gBehMedBeM2 gBehMedJm gBehMedRe 
    gBehMedSn gBehMedSd gBehMedTaF gBehMedTaM gBehMedAi gBehMedFe gBehMedQf 
    gBehMedMm gBehMedNn gBehMedHgF gBehMedHgM gBehMedHd gBehMedCh gBehMedBy 
    gBehMedBe gBehMedBeRe gBehMedBeNn gBehMedBeHg gBehMedMmX gBehMedKfX gBehMedBeF_ss 
    gBehMedSd_ss gBehMedTaF_ss gBehMedTaM_ss gBehMedAi_ss gBehMedFe_ss gBehMedQf_ss gBehMedHgF_be ) ;
cJeemMed = ( gJeemMed gJeemMedBeM1 gJeemMedBeF gJeemMedBeM2 gJeemMedJm gJeemMedRe 
    gJeemMedSn gJeemMedSd gJeemMedTaF gJeemMedTaM gJeemMedAi gJeemMedFe gJeemMedQf 
    gJeemMedMm gJeemMedNn gJeemMedHgF gJeemMedHgM gJeemMedHd gJeemMedCh gJeemMedBy 
    gJeemMedBe gJeemMedBeRe gJeemMedBeNn gJeemMedBeHg gJeemMedMmX gJeemMedKfX ) ;
cSeenMed = ( gSeenMed gSeenMedBeM1 gSeenMedBeF gSeenMedBeM2 gSeenMedJm gSeenMedRe 
    gSeenMedSn gSeenMedSd gSeenMedTaF gSeenMedTaM gSeenMedAi gSeenMedFe gSeenMedQf 
    gSeenMedMm gSeenMedNn gSeenMedHgF gSeenMedHgM gSeenMedHd gSeenMedCh gSeenMedBy 
    gSeenMedBe gSeenMedBeRe gSeenMedBeNn gSeenMedBeHg gSeenMedMmX gSeenMedKfX ) ;
cSadMed = ( gSadMed gSadMedBeM1 gSadMedBeF gSadMedBeM2 gSadMedJm gSadMedRe 
    gSadMedSn gSadMedSd gSadMedTaF gSadMedTaM gSadMedAi gSadMedFe gSadMedQf 
    gSadMedMm gSadMedNn gSadMedHgF gSadMedHgM gSadMedHd gSadMedCh gSadMedBy 
    gSadMedBe gSadMedBeRe gSadMedBeNn gSadMedBeHg gSadMedMmX gSadMedKfX ) ;
cAinMed = ( gAinMed gAinMedBeM1 gAinMedBeF gAinMedBeM2 gAinMedJm gAinMedRe 
    gAinMedSn gAinMedSd gAinMedTaF gAinMedTaM gAinMedAi gAinMedFe gAinMedQf 
    gAinMedMm gAinMedNn gAinMedHgF gAinMedHgM gAinMedHd gAinMedCh gAinMedBy 
    gAinMedBe gAinMedBeRe gAinMedBeNn gAinMedBeHg gAinMedMmX gAinMedKfX ) ;
cTahMed = ( gTahMed gTahMedBeM1 gTahMedBeF gTahMedBeM2 gTahMedJm gTahMedRe 
    gTahMedSn gTahMedSd gTahMedTaF gTahMedTaM gTahMedAi gTahMedFe gTahMedQf 
    gTahMedMm gTahMedNn gTahMedHgF gTahMedHgM gTahMedHd gTahMedCh gTahMedBy 
    gTahMedBe gTahMedBeRe gTahMedBeNn gTahMedBeHg gTahMedMmX gTahMedKfX ) ;
cFehMed = ( gFehMed gFehMedBeM1 gFehMedBeF gFehMedBeM2 gFehMedJm gFehMedRe 
    gFehMedSn gFehMedSd gFehMedTaF gFehMedTaM gFehMedAi gFehMedFe gFehMedQf 
    gFehMedMm gFehMedNn gFehMedHgF gFehMedHgM gFehMedHd gFehMedCh gFehMedBy 
    gFehMedBe gFehMedBeRe gFehMedBeNn gFehMedBeHg gFehMedMmX gFehMedKfX ) ;
cLamMed = ( gLamMed gLamMedBeM1 gLamMedBeF gLamMedBeM2 gLamMedJm gLamMedRe 
    gLamMedSn gLamMedSd gLamMedTaF gLamMedTaM gLamMedAi gLamMedFe gLamMedQf 
    gLamMedMm gLamMedNn gLamMedHgF gLamMedHgM gLamMedHd gLamMedCh gLamMedBy 
    gLamMedBe gLamMedBeRe gLamMedBeNn gLamMedBeHg gLamMedKfX
	gLamMedAl ) ;
cMeemMed = ( gMeemMed gMeemMedBeM1 gMeemMedBeF gMeemMedBeM2 gMeemMedJm gMeemMedRe 
    gMeemMedSn gMeemMedSd gMeemMedTaF gMeemMedTaM gMeemMedAi gMeemMedFe gMeemMedQf 
    gMeemMedMm gMeemMedNn gMeemMedHgF gMeemMedHgM gMeemMedHd gMeemMedCh gMeemMedBy 
    gMeemMedBe gMeemMedBeRe gMeemMedBeNn gMeemMedBeHg gMeemMedMmX gMeemMedKfX ) ;
cMeemMed_alt = (gMeemMed_alt gMeemMedBeNn_alt);
cHehGoalMed = ( gHehGoalMed gHehGoalMedBeM1 gHehGoalMedBeF gHehGoalMedBeM2 
    gHehGoalMedJm gHehGoalMedRe gHehGoalMedSn gHehGoalMedSd gHehGoalMedTaF gHehGoalMedTaM 
    gHehGoalMedAi gHehGoalMedFe gHehGoalMedQf gHehGoalMedMm gHehGoalMedNn gHehGoalMedHgF 
    gHehGoalMedHgM gHehGoalMedHd gHehGoalMedCh gHehGoalMedBy gHehGoalMedBe 
    gHehGoalMedBeRe gHehGoalMedBeNn gHehGoalMedBeHg gHehGoalMedMmX gHehGoalMedKfX ) ;
cKafMed_gaf = (gGafMed gGafMedBe gGafMedBeF gGafMedBeM2 gGafMedJm gGafMedRe gGafMedSn 
	gGafMedSd gGafMedTaF gGafMedAi gGafMedFe gGafMedQf gGafMedMm gGafMedNn 
	gGafMedHgF gGafMedHd gGafMedCh gGafMedBy gGafMedDk gGafMedBeRe gGafMedBeNn gGafMedBeHg);
cKafMed = ( gKafMed gKafMedBe gKafMedBeF gKafMedBeM2 gKafMedJm gKafMedRe gKafMedSn 
    gKafMedSd gKafMedTaF gKafMedAi gKafMedFe gKafMedQf gKafMedMm gKafMedNn 
    gKafMedHgF gKafMedHd gKafMedCh gKafMedBy gKafMedDk gKafMedBeRe gKafMedBeNn gKafMedBeHg
	cKafMed_gaf) ;
cHehDoMed = ( gHehDoMed gHehDoMedBeM1 gHehDoMedBeF 
    gHehDoMedBeM2 gHehDoMedJm gHehDoMedRe gHehDoMedSn 
    gHehDoMedSd gHehDoMedTaF gHehDoMedTaM gHehDoMedAi 
    gHehDoMedFe gHehDoMedQf gHehDoMedMm gHehDoMedNn 
    gHehDoMedHgF gHehDoMedHgM gHehDoMedHd gHehDoMedCh 
    gHehDoMedBy gHehDoMedBe gHehDoMedBeRe gHehDoMedBeNn 
    gHehDoMedBeHg gHehDoMedMmX gHehDoMedKfX ) ;

// Here we treat the non-alt forms as part of the alt class, just to fill out the class.
cKafMed_alt = ( gKafMedBeM1_alt gKafMedBeF_alt gKafMedBeM2_alt gKafMedJm_alt gKafMedSn_alt 
    gKafMedSd_alt gKafMedHd_alt gKafMedTaM_alt gKafMedAi_alt gKafMedFe_alt gKafMedMm_alt 
    gKafMedHgM_alt gKafMedBe_alt gKafMedBeRe gKafMedBeNn gKafMedBeHg gKafMedMmX
    gKafMedKfX gGafMedBeM1_alt gGafMedBeF_alt gGafMedBeM2_alt gGafMedJm_alt gGafMedSn_alt 
    gGafMedSd_alt gGafMedHd_alt gGafMedTaM_alt gGafMedAi_alt gGafMedFe_alt gGafMedMm_alt 
    gGafMedHgM_alt gGafMedBe_alt gGafMedBeRe gGafMedBeNn gGafMedBeHg
    gGafMedMmX gGafMedKfX ) ;

// These ONLY have true kaf alt forms:
cKafMed_justAlt = ( gKafMedBeM1_alt gKafMedBeF_alt gKafMedBeM2_alt gKafMedJm_alt gKafMedSn_alt 
    gKafMedSd_alt gKafMedHd_alt gKafMedTaM_alt gKafMedAi_alt gKafMedFe_alt gKafMedMm_alt 
    gKafMedHgM_alt gKafMedBe_alt gGafMedBeM1_alt gGafMedBeF_alt gGafMedBeM2_alt gGafMedJm_alt gGafMedSn_alt 
    gGafMedSd_alt gGafMedHd_alt gGafMedTaM_alt gGafMedAi_alt gGafMedFe_alt gGafMedMm_alt 
    gGafMedHgM_alt gGafMedBe_alt);


c_Med_ss = ( gBehMedBeF_ss gBehMedSd_ss gBehMedTaF_ss gBehMedTaM_ss gBehMedAi_ss gBehMedFe_ss 
	gBehMedQf_ss gBehMedHgF_be ) ;


// Does not initiate alternate (kinked) kaf:
c_dkg_noKalt = ( gDalFin
	gKafFin gGafFin 
	gKafMedBeF gKafMedBeM2 gKafMedJm gKafMedRe gKafMedSn gKafMedSd gKafMedTaF
	gKafMedAi gKafMedFe gKafMedQf gKafMedMm gKafMedNn gKafMedHgF gKafMedHd gKafMedCh 
	gKafMedBy gKafMedDk 
    gGafMedBeF gGafMedBeM2 gGafMedJm gGafMedRe gGafMedSn gGafMedSd gGafMedTaF 
    gGafMedAi gGafMedFe gGafMedQf gGafMedMm gGafMedNn gGafMedHgF gGafMedHd gGafMedCh
    gGafMedBy gGafMedDk ) ;

// initiates rounded kaf:
c_al_postKround = (cAlefFin cLamFin cLamMed);

// Requires alternate meem and kaf
c_dkgal_postAlt = ( c_dkg_noKalt, c_al_postKround );

// Use when we are not generating kinked kafs:
///c_dkgal = (c_dkgal_postAlt,
///	gKafMedBe, gKafMedBeRe, gKafMedBeNn, gKafMedBeHg,
///	gGafMedBe, gGafMedBeRe, gGafMedBeNn, gGafMedBeHg);

c_dkgal = (cDalFin, cKafFin, cKafMed, c_al_postKround);


// Alternate qaf and waw forms
c_qw = (gQafFin gQafFin_stfhM gWawFin gWawFin_stfh);


// Heh-doachashmee initial alternates (which are actually the default forms)

gHehDoIni_alt		{ exit_lamKaf = gHehDoMed.exit_lamKaf; n1LowerS = gHehDoMedAi.n1LowerS; nUpperS = gHehDoMedAi.nUpperS };
gHehDoIniAi_alt		{ exit_ain = gHehDoMedAi.exit_ain; n1LowerS = gHehDoMedAi.n1LowerS; nUpperS = gHehDoMedAi.nUpperS };
gHehDoIniBe_alt		{ exit_beh = gHehDoMedBe.exit_beh; n1LowerS = gHehDoMedBeF.n1LowerS; nUpperS = gHehDoMedBeF.nUpperS };
gHehDoIniBeF_alt	{ exit_behFinal = gHehDoMedBeF.exit_behFinal; n1LowerS = gHehDoMedBeF.n1LowerS; nUpperS = gHehDoMedBeF.nUpperS };
gHehDoIniBeM1_alt	{ exit_behLowTooth = gHehDoMedBeM1.exit_behLowTooth; n1LowerS = gHehDoMedBeM1.n1LowerS; nUpperS = gHehDoMedBeM1.nUpperS };
gHehDoIniBeM2_alt	{ exit_behHighTooth = gHehDoMedBeM2.exit_behHighTooth; n1LowerS = gHehDoMedBeM2.n1LowerS; nUpperS = gHehDoMedBeM2.nUpperS };
gHehDoIniBeHg_alt	{ exit_behLowTooth = gHehDoMedBeHg.exit_behLowTooth; n1LowerS = gHehDoMedBeHg.n1LowerS; nUpperS = gHehDoMedBeHg.nUpperS };
gHehDoIniBeNn_alt	{ exit_behPreNoon = gHehDoMedBeNn.exit_behPreNoon; n1LowerS = gHehDoMedBeNn.n1LowerS; nUpperS = gHehDoMedBeNn.nUpperS };
gHehDoIniBeRe_alt	{ exit_behPreReh = gHehDoMedBeRe.exit_behPreReh; n1LowerS = gHehDoMedBeRe.n1LowerS; nUpperS = gHehDoMedBeRe.nUpperS };
gHehDoIniBy_alt		{ exit_bariyeh = gHehDoMedBy.exit_bariyeh; n1LowerS = gHehDoMedBy.n1LowerS; nUpperS = gHehDoMedBy.nUpperS };
gHehDoIniCh_alt		{ exit_chotiyeh = gHehDoMedCh.exit_chotiyeh; n1LowerS = gHehDoMedCh.n1LowerS; nUpperS = gHehDoMedCh.nUpperS };
gHehDoIniFe_alt		{ exit_feh = gHehDoMedFe.exit_feh; n1LowerS = gHehDoMedFe.n1LowerS; nUpperS = gHehDoMedFe.nUpperS };
gHehDoIniHd_alt		{ exit_hehdoach = gHehDoMedHd.exit_hehdoach; n1LowerS = gHehDoMedHd.n1LowerS; nUpperS = gHehDoMedHd.nUpperS };
gHehDoIniHgM_alt	{ exit_hehgoalMedial = gHehDoMedHgM.exit_hehgoalMedial; n1LowerS = gHehDoMedHgM.n1LowerS; nUpperS = gHehDoMedHgM.nUpperS };
gHehDoIniHgF_alt	{ exit_hehgoalFinal = gHehDoMedHgF.exit_hehgoalFinal; n1LowerS = gHehDoMedHgF.n1LowerS; nUpperS = gHehDoMedHgF.nUpperS };
gHehDoIniJm_alt		{ exit_jeem = gHehDoMedJm.exit_jeem; n1LowerS = gHehDoMedJm.n1LowerS; nUpperS = gHehDoMedJm.nUpperS };
gHehDoIniRe_alt		{ exit_reh = gHehDoMedRe.exit_reh; n1LowerS = gHehDoMedRe.n1LowerS; nUpperS = gHehDoMedRe.nUpperS };
gHehDoIniSd_alt		{ exit_sad = gHehDoMedSd.exit_sad; n1LowerS = gHehDoMedSd.n1LowerS; nUpperS = gHehDoMedSd.nUpperS };
gHehDoIniSn_alt		{ exit_seen = gHehDoMedSn.exit_seen; n1LowerS = gHehDoMedSn.n1LowerS; nUpperS = gHehDoMedSn.nUpperS };
gHehDoIniTaF_alt	{ exit_tah = gHehDoMedTaF.exit_tah; n1LowerS = gHehDoMedTaF.n1LowerS; nUpperS = gHehDoMedTaF.nUpperS };
gHehDoIniTaM_alt	{ exit_tah = gHehDoMedTaM.exit_tah; n1LowerS = gHehDoMedTaM.n1LowerS; nUpperS = gHehDoMedTaM.nUpperS };
gHehDoIniKfX_alt	{ exit_kafAlt = gHehDoMedKfX.exit_kafAlt; n1LowerS = gHehDoMedKfX.n1LowerS; nUpperS = gHehDoMedKfX.nUpperS };
gHehDoIniMm_alt		{ exit_meem = gHehDoMedMm.exit_meem; n1LowerS = gHehDoMedMm.n1LowerS; nUpperS = gHehDoMedMm.nUpperS };
gHehDoIniMmX_alt	{ exit_meemAlt = gHehDoMedMmX.exit_meemAlt; n1LowerS = gHehDoMedMmX.n1LowerS; nUpperS = gHehDoMedMmX.nUpperS };
gHehDoIniNn_alt		{ exit_noon = gHehDoMedNn.exit_noon; n1LowerS = gHehDoMedNn.n1LowerS; nUpperS = gHehDoMedNn.nUpperS };
gHehDoIniQf_alt		{ exit_qafWawStfh = gHehDoMedQf.exit_qafWawStfh; n1LowerS = gHehDoMedQf.n1LowerS; nUpperS = gHehDoMedQf.nUpperS };

c_exit_lamKaf		+=	(gHehDoIni_alt);
c_exit_ain			+=	(gHehDoIniAi_alt);
c_exit_beh			+=	(gHehDoIniBe_alt);
c_exit_behFinal		+=	(gHehDoIniBeF_alt);
c_exit_behLowTooth	+=	(gHehDoIniBeM1_alt, gHehDoIniBeHg_alt);
c_exit_behHighTooth	+=	(gHehDoIniBeM2_alt);
c_exit_behPreNoon	+=	(gHehDoIniBeNn_alt);
c_exit_behPreReh	+=	(gHehDoIniBeRe_alt);
c_exit_bariyeh		+=	(gHehDoIniBy_alt);
c_exit_chotiyeh		+=	(gHehDoIniCh_alt);
c_exit_feh			+=	(gHehDoIniFe_alt);
c_exit_hehdoach		+=	(gHehDoIniHd_alt);
c_exit_hehgoalMedial +=	(gHehDoIniHgM_alt);
c_exit_hehgoalFinal	+=	(gHehDoIniHgF_alt);
c_exit_jeem			+=	(gHehDoIniJm_alt);
c_exit_reh			+=	(gHehDoIniRe_alt);
c_exit_sad			+=	(gHehDoIniSd_alt);
c_exit_seen			+=	(gHehDoIniSn_alt);
c_exit_tah			+=	(gHehDoIniTaF_alt, gHehDoIniTaM_alt);
c_exit_kafAlt		+=	(gHehDoIniKfX_alt);
c_exit_meem			+=	(gHehDoIniMm_alt);
c_exit_meemAlt		+=	(gHehDoIniMmX_alt);
c_exit_noon			+=	(gHehDoIniNn_alt);
c_exit_qafWawStfh	+=	(gHehDoIniQf_alt);


cHehDoIni_noAlt = (gHehDoIni gHehDoIniAi gHehDoIniBe gHehDoIniBeF gHehDoIniBeM1 gHehDoIniBeM2 gHehDoIniBeHg 
	gHehDoIniBeNn gHehDoIniBeRe gHehDoIniFe gHehDoIniJm  gHehDoIniRe gHehDoIniSd gHehDoIniSn
	gHehDoIniTaF gHehDoIniTaM gHehDoIniKfX gHehDoIniMm gHehDoIniMmX gHehDoIniNn gHehDoIniQf 
	gHehDoIniHd gHehDoIniHgM gHehDoIniHgF gHehDoIniCh gHehDoIniBy);

cHehDoIni_alt = (gHehDoIni_alt gHehDoIniAi_alt gHehDoIniBe_alt gHehDoIniBeF_alt gHehDoIniBeM1_alt gHehDoIniBeM2_alt gHehDoIniBeHg_alt 
	gHehDoIniBeNn_alt gHehDoIniBeRe_alt gHehDoIniFe_alt gHehDoIniJm_alt gHehDoIniRe_alt gHehDoIniSd_alt gHehDoIniSn_alt
	gHehDoIniTaF_alt gHehDoIniTaM_alt gHehDoIniKfX_alt gHehDoIniMm_alt gHehDoIniMmX_alt gHehDoIniNn_alt gHehDoIniQf_alt
	gHehDoIniHd_alt gHehDoIniHgM_alt gHehDoIniHgF_alt gHehDoIniCh_alt gHehDoIniBy_alt);

c_initial += (cHehDoIni_alt);
cTakes_n1LowerDia += (cHehDoIni_alt);
cTakes_nUpperDia += (cHehDoIni_alt);


cLamIM = (cLamIni cLamMed);
cKafIM = (cKafIni cKafMed);

endtable;  // glyph

